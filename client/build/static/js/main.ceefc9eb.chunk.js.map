{"version":3,"sources":["services/auth.service.js","components/LoginModal.js","components/RegisterModal.js","components/RestaurantModal.js","services/data.service.js","components/Home.js","components/BoardAdmin.js","App.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","history","useHistory","Modal","size","aria-labelledby","centered","Body","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","push","window","location","reload","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","vusername","vpassword","Register","successful","setSuccessful","IMG_URL","RestaurantModal","dialogClassName","onClick","onHide","src","mainPicture","alt","adress","town","details","split","map","item","id","join","toLowerCase","price","get","content","Home","modalShow","setModalShow","restaurantModal","setRestaurantModal","restaurantInfos","setRestaurantInfos","setData","openModal","useEffect","DataService","show","Dragger","Upload","BoardAdmin","restaurantsNamesData","setRestaurantsNamesData","restaurantContent","setRestaurantContent","multiple","action","info","status","file","Toast","success","fail","hide","console","log","width","height","margin","backgroundColor","textAlign","App","showAdminBoard","setShowAdminBoard","undefined","currentUser","setCurrentUser","loginModalShow","setLoginModalShow","signInModalShow","setSignInModalShow","user","roles","includes","to","href","exact","path","component","LoginModal","RegisterModal","ReactDOM","render","document","getElementById"],"mappings":"mOAEMA,EAAU,kCAiCD,EA/BE,SAACC,EAAUC,GAC1B,OAAOC,IAAMC,KAAKJ,EAAU,SAAU,CACpCC,WACAC,cA4BW,EAxBD,SAACD,EAAUC,GACvB,OAAOC,IACJC,KAAKJ,EAAU,SAAU,CACxBC,WACAC,aAEDG,MAAK,SAACC,GAKL,OAJIA,EAASC,KAAKC,aAChBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAASC,OAGhDD,EAASC,SAaP,EATA,WACbE,aAAaI,WAAW,SAQX,EALQ,WACrB,OAAOF,KAAKG,MAAML,aAAaM,QAAQ,U,0ECrBnCC,EAAW,SAACC,GAChB,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAkHSC,MA3Gf,SAAeC,GACb,IAAMC,EAAOC,mBACPC,EAAWD,mBAFG,EAIYE,mBAAS,IAJrB,mBAIbxB,EAJa,KAIHyB,EAJG,OAKYD,mBAAS,IALrB,mBAKbvB,EALa,KAKHyB,EALG,OAMUF,oBAAS,GANnB,mBAMbG,EANa,KAMJC,EANI,OAOUJ,mBAAS,IAPnB,mBAObK,EAPa,KAOJC,EAPI,KAQhBC,EAAUC,cA2Cd,OACE,cAACC,EAAA,EAAD,2BACMb,GADN,IAEEc,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJV,SAME,cAACH,EAAA,EAAMI,KAAP,UACA,eAAC,IAAD,CAAMC,SAvCU,SAACC,GACnBA,EAAEC,iBAEFV,EAAW,IACXF,GAAW,GAEXP,EAAKoB,QAAQC,cAEmC,IAA5CnB,EAASkB,QAAQE,QAAQC,QAAQC,OACnCC,EAAkB9C,EAAUC,GAAUG,MACpC,WACE2B,EAAQgB,KAAK,SACbC,OAAOC,SAASC,YAElB,SAACC,GACC,IAAMC,EACHD,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKuB,SACtBsB,EAAMtB,SACNsB,EAAME,WAERzB,GAAW,GACXE,EAAWsB,MAIfxB,GAAW,IAYkB0B,IAAKjC,EAAMJ,UAAU,aAAlD,UACK,sBAAKA,UAAU,aAAf,UACE,uBAAOsC,QAAQ,WAAf,sBACD,cAAC,IAAD,CACEC,KAAK,OACLvC,UAAU,eACVwC,KAAK,WACLzC,MAAOhB,EACP0D,SAzDa,SAACnB,GACxB,IAAMvC,EAAWuC,EAAEoB,OAAO3C,MAC1BS,EAAYzB,IAwDF4D,YAAa,CAAC7C,QAIlB,sBAAKE,UAAU,aAAf,UACE,uBAAOsC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLvC,UAAU,eACVwC,KAAK,WACLzC,MAAOf,EACPyD,SAhEa,SAACnB,GACxB,IAAMtC,EAAWsC,EAAEoB,OAAO3C,MAC1BU,EAAYzB,IA+DF2D,YAAa,CAAC7C,QAIlB,qBAAKE,UAAU,aAAf,SACE,yBAAQA,UAAU,4BAA4B4C,SAAUlC,EAAxD,UACGA,GACC,sBAAMV,UAAU,qCAElB,+CAIHY,GACC,qBAAKZ,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBC,KAAK,QAAzC,SACGW,MAIP,cAAC,IAAD,CAAaiC,MAAO,CAAEC,QAAS,QAAUT,IAAK/B,aCjHlDR,EAAW,SAACC,GAChB,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOA8C,EAAY,SAAChD,GACjB,GAAIA,EAAM6B,OAAS,GAAK7B,EAAM6B,OAAS,GACrC,OACE,qBAAK5B,UAAU,qBAAqBC,KAAK,QAAzC,gEAOA+C,EAAY,SAACjD,GACjB,GAAIA,EAAM6B,OAAS,GAAK7B,EAAM6B,OAAS,GACrC,OACE,qBAAK5B,UAAU,qBAAqBC,KAAK,QAAzC,gEA6KSgD,EAtKE,SAAC9C,GAChB,IAAMC,EAAOC,mBACPC,EAAWD,mBAFS,EAIME,mBAAS,IAJf,mBAInBxB,EAJmB,KAITyB,EAJS,OAKMD,mBAAS,IALf,mBAKnBvB,EALmB,KAKTyB,EALS,OAMUF,oBAAS,GANnB,mBAMnB2C,EANmB,KAMPC,EANO,OAOI5C,mBAAS,IAPb,mBAOnBK,EAPmB,KAOVC,EAPU,KAgD1B,OACE,cAACG,EAAA,EAAD,2BACMb,GADN,IAEEc,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJV,SAME,cAACH,EAAA,EAAMI,KAAP,UACA,eAAC,IAAD,CAAMC,SArCa,SAACC,GACtBA,EAAEC,iBAEFV,EAAW,IACXsC,GAAc,GAEd/C,EAAKoB,QAAQC,cAEmC,IAA5CnB,EAASkB,QAAQE,QAAQC,QAAQC,QACnCC,EAAqB9C,EAAUC,GAAUG,MACvC,SAACC,GACCyB,EAAWzB,EAASC,KAAKuB,SACzBuC,GAAc,MAEhB,SAACjB,GACC,IAAMC,EACHD,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKuB,SACtBsB,EAAMtB,SACNsB,EAAME,WAERvB,EAAWsB,GACXgB,GAAc,OAccd,IAAKjC,EAAMJ,UAAU,aAArD,WACOkD,GACD,gCACE,sBAAKlD,UAAU,aAAf,UACE,uBAAOsC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLvC,UAAU,eACVwC,KAAK,WACLzC,MAAOhB,EACP0D,SAzDS,SAACnB,GACxB,IAAMvC,EAAWuC,EAAEoB,OAAO3C,MAC1BS,EAAYzB,IAwDE4D,YAAa,CAAC7C,EAAUiD,QAI5B,sBAAK/C,UAAU,aAAf,UACE,uBAAOsC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLvC,UAAU,eACVwC,KAAK,WACLzC,MAAOf,EACPyD,SAhES,SAACnB,GACxB,IAAMtC,EAAWsC,EAAEoB,OAAO3C,MAC1BU,EAAYzB,IA+DE2D,YAAa,CAAC7C,EAAUkD,QAI5B,qBAAKhD,UAAU,aAAf,SACE,wBAAQA,UAAU,4BAAlB,0BAKLY,GACC,qBAAKZ,UAAU,aAAf,SACE,qBACEA,UAAYkD,EAAa,sBAAwB,qBACjDjD,KAAK,QAFP,SAIGW,MAIP,cAAC,IAAD,CAAaiC,MAAO,CAAEC,QAAS,QAAUT,IAAK/B,aCtIlD8C,EAAU,oCA+CDC,EA7CS,SAAClD,GACrB,OACI,cAACa,EAAA,EAAD,yBAAOsC,gBAAgB,mBAAsBnD,GAA7C,IAAoDgB,UAAQ,EAA5D,SACKhB,EAAMd,MACH,eAAC2B,EAAA,EAAMI,KAAP,WACI,wBAAQmC,QAASpD,EAAMqD,OAAQjB,KAAK,SAASvC,UAAU,QAAvD,kBAGA,qBAAKA,UAAU,uBAAf,SACI,qBAAKyD,IAAKL,EAAUjD,EAAMd,KAAKqE,YAAaC,IAAKxD,EAAMd,KAAKmD,SAEhE,sBAAKxC,UAAU,iCAAf,UACI,6BAAKG,EAAMd,KAAKmD,OAChB,4BAAIrC,EAAMd,KAAKkD,UAEnB,sBAAKvC,UAAU,+BAAf,UACI,4BAAIG,EAAMd,KAAKuE,SACf,8BAAIzD,EAAMd,KAAKwE,KAAf,UAEJ,sBAAK7D,UAAU,2BAAf,UAEIG,EAAMd,KAAKyE,QAAQC,MAAM,KAAKC,KAAI,SAASC,GAC3C,OACQ,sBAAKjE,UAAU,iCAAf,UACI,qBAAKA,UAAU,yCAAyCkE,GAAa,WAATD,EAAoB,UAAY,KAA5F,SACA,qBAAKR,IAAG,UAAKL,EAAUa,EAAKF,MAAM,KAAKI,KAAK,KAAKC,cAAzC,QAA8DT,IAAKM,MAE3E,4BAAIA,MAJ6CA,MASjE,sBAAKjE,UAAU,iCAAf,UACA,qBAAKA,UAAU,yCAAf,SACI,qBAAKyD,IAAKtD,EAAMd,KAAKgF,OAAS,GAAKjB,EAAU,iBAAmBA,EAAU,eAAgBO,IAAKxD,EAAMd,KAAKgF,UAE7GlE,EAAMd,KAAKgF,OAAS,GAAK,kDAAsB,wECtC9DvF,EAAU,yBAqBD,EAnBU,WACrB,OAAOG,IAAMqF,IAAIxF,EAAU,gBAkBhB,EAfc,WACzB,OAAOG,IAAMqF,IAAIxF,EAAU,sBAchB,EAXc,SAAC0D,GAC1B,OAAOvD,IAAMqF,IAAIxF,EAAO,gCAA4B0D,KAUzC,EAPU,SAAC+B,GACtB,OAAOtF,IACNC,KAAKJ,EAAU,mBAAoByF,GACnCpF,MAAK,SAACC,GAAc,OAAOA,EAASC,SC0B1BmF,EAzCF,WAAO,IAAD,EACmBjE,oBAAS,GAD5B,mBACRkE,EADQ,KACGC,EADH,OAE+BnE,oBAAS,GAFxC,mBAERoE,EAFQ,KAESC,EAFT,OAG+BrE,mBAAS,MAHxC,mBAGRsE,EAHQ,KAGSC,EAHT,OAISvE,mBAAS,MAJlB,mBAIRlB,EAJQ,KAIF0F,EAJE,KAMTC,EAAY,SAACjF,GACfgF,EAAQF,EAAgB9E,IACxB6E,GAAmB,GACnBF,GAAa,IAWjB,OARAO,qBAAU,WACNC,IAA+B/F,MAC3B,SAACC,GACG0F,EAAmB1F,EAASC,WAEtC,IAIE,oCACA,qBAAKW,UAAU,YAAf,SACI,sBAAKA,UAAU,sBAAf,UACA,8BAAK,wBAAQA,UAAU,wBAAwBuD,QAAS,kBAAMyB,EAAU,IAAnE,sBACL,8BAAK,wBAAQhF,UAAU,wBAAwBuD,QAAS,kBAAMyB,EAAU,IAAnE,2BAIRL,GACG,cAAC,EAAD,CACIQ,KAAMV,EACNjB,OAAQ,kBAAMkB,GAAa,IAC3BrF,KAAMA,Q,iBC7BhB+D,EAAU,oCAERgC,EAAYC,IAAZD,QAEFtF,EAAW,SAACC,GACd,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAoQOqF,EA7PI,WAAO,IAAD,EACmC/E,mBAAS,IAD5C,mBACdgF,EADc,KACQC,EADR,OAE6BjF,mBAAS,IAFtC,mBAEdkF,EAFc,KAEKC,EAFL,OAGSnF,oBAAS,GAHlB,mBAGdG,EAHc,KAGLC,EAHK,KAIfP,EAAOC,mBACPC,EAAWD,mBAEXF,EAAQ,CACVqC,KAAM,QACNmD,UAAU,EACVC,OAAQ,8BACRnD,SAJU,SAIDoD,GAAO,IACJC,EAAWD,EAAKE,KAAhBD,OAEO,SAAXA,GACAE,IAAMC,QAAN,UAAiBJ,EAAKE,KAAKvD,KAA3B,gCAA+D,KAC/DkD,EAAqB,2BACdD,GADa,IAEhB/B,YAAcmC,EAAKE,KAAKvD,SAEV,UAAXsD,GACPE,IAAME,KAAN,UAAcL,EAAKE,KAAKvD,KAAxB,wBAAoD,OA2FhE,OARAyC,qBAAU,WACNC,IAAmC/F,MAC/B,SAACC,GACGoG,EAAwBpG,EAASC,WAE3C,IAIM,sBAAKW,UAAU,wBAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,+CAEJ,8BACKuF,GACGA,EAAqBvB,KAAI,SAASC,GAClC,OACQ,qBAAKjE,UAAU,sCAAf,SACI,mBAAGuD,QAAS,kBAjGlBf,EAiG6CyB,EAAKzB,UAhG5E0C,EAAiC1C,GAAMrD,MACnC,SAACC,GACGsG,EAAqBtG,EAASC,SAHb,IAACmD,GAiGM,SAAoDyB,EAAKzB,QADHyB,EAAKzB,cAQnF,qBAAKxC,UAAU,iCAAf,SACKyF,GACG,qCACI,qBAAKzF,UAAU,wCAAf,SACA,eAAC,IAAD,CAAMA,UAAU,aAAaqC,IAAKjC,EAAMiB,SA5D3C,SAACC,GAClBA,EAAEC,iBAEFZ,GAAW,GAEXP,EAAKoB,QAAQC,cAEmC,IAA5CnB,EAASkB,QAAQE,QAAQC,QAAQC,QACjCoE,IAAMtF,QAAQ,cACdwE,EAA6BO,GAAmBtG,MAC5C,WACI+F,IAAmC/F,MAC/B,SAACC,GACGoG,EAAwBpG,EAASC,SAEzCsB,GAAW,GACXqF,IAAMG,OACNH,IAAMC,QAAQ,YAAa,QAE7B,SAAC/D,GACKkE,QAAQC,IAAInE,EAAM9C,UAClBuB,GAAW,QAIvBqF,IAAMG,OACNxF,GAAW,KAkCK,UACI,cAACyE,EAAD,2BAAajF,GAAb,aACI,qBAAK0C,MAAO,CAACyD,MAAO,MAAOC,OAAQ,QAASC,OAAO,OAAQC,gBAAgB,aAA3E,SACI,mBAAGzG,UAAU,kBAAkB6C,MAAO,CAAC6D,UAAW,UAAlD,6DAGR,sBAAK1G,UAAU,aAAf,UACI,uBAAOsC,QAAQ,OAAf,kBACA,cAAC,IAAD,CACAC,KAAK,OACLvC,UAAU,eACVwC,KAAK,OACLzC,MAAO0F,EAAkBjD,KACzBC,SAjHX,SAACnB,GAClB,IAAMkB,EAAOlB,EAAEoB,OAAO3C,MACtB2F,EAAqB,2BACdD,GADa,IAEhBjD,KAAMA,MA8GkBG,YAAa,CAAC7C,QAIlB,sBAAKE,UAAU,aAAf,UACI,uBAAOsC,QAAQ,OAAf,kBACA,cAAC,IAAD,CACAC,KAAK,OACLvC,UAAU,eACVwC,KAAK,OACLzC,MAAO0F,EAAkBlD,KACzBE,SArHX,SAACnB,GAClB,IAAMiB,EAAOjB,EAAEoB,OAAO3C,MACtB2F,EAAqB,2BACdD,GADa,IAEhBlD,KAAMA,MAkHkBI,YAAa,CAAC7C,QAIlB,sBAAKE,UAAU,aAAf,UACI,uBAAOsC,QAAQ,SAAf,oBACA,cAAC,IAAD,CACAC,KAAK,OACLvC,UAAU,eACVwC,KAAK,SACLzC,MAAO0F,EAAkB7B,OACzBnB,SAzHT,SAACnB,GACpB,IAAMsC,EAAStC,EAAEoB,OAAO3C,MACxB2F,EAAqB,2BACdD,GADa,IAEhB7B,OAAQA,MAsHgBjB,YAAa,CAAC7C,QAIlB,sBAAKE,UAAU,aAAf,UACI,uBAAOsC,QAAQ,OAAf,kBACA,cAAC,IAAD,CACAC,KAAK,OACLvC,UAAU,eACVwC,KAAK,OACLzC,MAAO0F,EAAkB5B,KACzBpB,SA7HX,SAACnB,GAClB,IAAMuC,EAAOvC,EAAEoB,OAAO3C,MACtB2F,EAAqB,2BACdD,GADa,IAEhB5B,KAAMA,MA0HkBlB,YAAa,CAAC7C,QAIlB,sBAAKE,UAAU,aAAf,UACI,uBAAOsC,QAAQ,QAAf,mBACA,cAAC,IAAD,CACAC,KAAK,OACLvC,UAAU,eACVwC,KAAK,QACLzC,MAAO0F,EAAkBpB,MACzB5B,SAjIV,SAACnB,GACnB,IAAM+C,EAAQ/C,EAAEoB,OAAO3C,MACvB2F,EAAqB,2BACdD,GADa,IAEhBpB,MAAOA,MA8HiB1B,YAAa,CAAC7C,QAIlB,qBAAKE,UAAU,aAAf,SACI,yBAAQA,UAAU,4BAA4B4C,SAAUlC,EAAxD,UACCA,GACG,sBAAMV,UAAU,qCAEpB,wDAGJ,cAAC,IAAD,CAAa6C,MAAO,CAAEC,QAAS,QAAUT,IAAK/B,SAGlD,sBAAKN,UAAU,yCAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKyD,IAAKL,EAAUqC,EAAkB/B,YAAaC,IAAK8B,EAAkBjD,SAE9E,sBAAKxC,UAAU,yCAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,6BAAKyF,EAAkBjD,OACvB,4BAAIiD,EAAkBlD,UAE1B,sBAAKvC,UAAU,+BAAf,UACI,4BAAIyF,EAAkB7B,SACtB,8BAAI6B,EAAkB5B,KAAtB,UAEJ,sBAAK7D,UAAU,2BAAf,UAEQyF,EAAkB3B,QAAQC,MAAM,KAAKC,KAAI,SAASC,GAClD,OACQ,sBAAKjE,UAAU,iCAAf,UACI,qBAAKA,UAAU,yCAAyCkE,GAAa,WAATD,EAAoB,UAAY,KAA5F,SACA,qBAAKR,IAAG,UAAKL,EAAUa,EAAKF,MAAM,KAAKI,KAAK,KAAKC,cAAzC,QAA8DT,IAAKM,MAE3E,4BAAIA,MAJ6CA,MASjE,sBAAKjE,UAAU,iCAAf,UACI,qBAAKA,UAAU,yCAAf,SACI,qBAAKyD,IAAKgC,EAAkBpB,OAAS,GAAKjB,EAAU,iBAAmBA,EAAU,eAAgBO,IAAK8B,EAAkBpB,UAE3HoB,EAAkBpB,OAAS,GAAK,kDAAsB,gFC/KpFsC,EA7EH,WAAO,IAAD,EAC4BpG,oBAAS,GADrC,mBACTqG,EADS,KACOC,EADP,OAEsBtG,wBAASuG,GAF/B,mBAETC,EAFS,KAEIC,EAFJ,OAG4BzG,oBAAS,GAHrC,mBAGT0G,EAHS,KAGOC,EAHP,OAI8B3G,oBAAS,GAJvC,mBAIT4G,EAJS,KAIQC,EAJR,KAMhBnC,qBAAU,WACR,IAAMoC,EAAOxF,IAETwF,IACFL,EAAeK,GACfR,EAAkBQ,EAAKC,MAAMC,SAAS,kBAEvC,IAMH,OACE,gCACE,sBAAKvH,UAAU,2CAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMwH,GAAI,QAASxH,UAAU,WAA7B,oBAKD4G,GACC,oBAAI5G,UAAU,WAAd,SACE,cAAC,IAAD,CAAMwH,GAAI,SAAUxH,UAAU,WAA9B,8BAOL+G,EACC,qBAAK/G,UAAU,qBAAf,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGyH,KAAK,QAAQzH,UAAU,WAAWuD,QA1BlC,WACb1B,KAyBU,wBAMJ,sBAAK7B,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWuD,QAAS,kBAAM2D,GAAkB,IAAzD,sBAGF,oBAAIlH,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWuD,QAAS,kBAAM6D,GAAmB,IAA1D,6BAMR,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,UAAWpD,IAC9C,cAAC,IAAD,CAAOmD,KAAK,SAASC,UAAWtC,SAGpC,cAACuC,EAAD,CACE1C,KAAM8B,EACNzD,OAAQ,kBAAM0D,GAAkB,MAEjC,cAACY,EAAD,CACC3C,KAAMgC,EACN3D,OAAQ,kBAAM4D,GAAmB,UC3EzCW,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ceefc9eb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst register = (username, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\n// eslint-disable-next-line\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};","import React, { useState, useRef } from \"react\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from \"react-validation/build/form\";\nimport AuthService from \"../services/auth.service\";\nimport {\n  useHistory,\n} from \"react-router-dom\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nfunction Login(props) {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  let history = useHistory();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          history.push(\"/home\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Body>\n      <Form onSubmit={handleLogin} ref={form} className=\"modal-form\">\n           <div className=\"form-group\">\n             <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Log In</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default Login;","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 3 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 3 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Body>\n      <Form onSubmit={handleRegister} ref={form} className=\"modal-form\">\n           {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n\n//         <Form onSubmit={handleRegister} ref={form}>\n//           {!successful && (\n//             <div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"username\">Username</label>\n//                 <Input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"username\"\n//                   value={username}\n//                   onChange={onChangeUsername}\n//                   validations={[required, vusername]}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"password\">Password</label>\n//                 <Input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   name=\"password\"\n//                   value={password}\n//                   onChange={onChangePassword}\n//                   validations={[required, vpassword]}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <button className=\"btn btn-primary btn-block\">Sign Up</button>\n//               </div>\n//             </div>\n//           )}\n\n//           {message && (\n//             <div className=\"form-group\">\n//               <div\n//                 className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n//                 role=\"alert\"\n//               >\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\nexport default Register;","import Modal from 'react-bootstrap/Modal';\n\nconst IMG_URL = \"http://localhost:8080/image?name=\"\n\nconst RestaurantModal = (props) => {\n    return (\n        <Modal dialogClassName=\"modal-container\" {...props} centered>\n            {props.data && (\n                <Modal.Body>\n                    <button onClick={props.onHide} type=\"button\" className=\"close\">\n                            ×\n                    </button>\n                    <div className=\"modal-restaurant-img\">\n                        <img src={IMG_URL + props.data.mainPicture} alt={props.data.name}/>\n                    </div>\n                    <div className=\"modal-restaurant-name-category\">\n                        <h4>{props.data.name}</h4>\n                        <p>{props.data.type}</p>\n                    </div>\n                    <div className=\"modal-restaurant-adress-town\">\n                        <p>{props.data.adress}</p>\n                        <p>{props.data.town}.</p>\n                    </div>\n                    <div className=\"modal-restaurant-details\">\n                    {\n                        props.data.details.split(',').map(function(item){\n                        return (\n                                <div className=\"modal-restaurant-details-icons\" key={item}>\n                                    <div className=\"modal-restaurant-details-icons-wrapper\" id={item === \"France\" ? \"country\" : null } >\n                                    <img src={`${IMG_URL + item.split(' ').join('_').toLowerCase()}.svg`} alt={item}/>\n                                    </div>\n                                    <p>{item}</p>\n                                </div>          \n                                )\n                        })\n                    }\n                    <div className=\"modal-restaurant-details-icons\">\n                    <div className=\"modal-restaurant-details-icons-wrapper\">\n                        <img src={props.data.price <= 15 ? IMG_URL + \"smallprice.svg\" : IMG_URL + \"midprice.svg\"} alt={props.data.price}/>\n                    </div>\n                    {props.data.price <= 15 ? <p>Moins de 15€</p> : <p>Entre 30€ et 50€</p>}\n                    </div>\n                </div>\n                </Modal.Body>\n            )}\n        </Modal>\n        );\n  }\n\nexport default RestaurantModal;","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/\";\n\nconst getAllRestaurant = () =>{\n    return axios.get(API_URL + \"restaurants\")\n}\n\nconst getAllRestaurantName = () =>{\n    return axios.get(API_URL + \"restaurants/names\")\n}\n\nconst getRestaurantContent = (name) => {\n    return axios.get(API_URL + `restaurants/name?name=${name}`)\n}\n\nconst updateRestaurant = (content) => {\n    return axios\n    .post(API_URL + \"updateRestaurant\", content)\n    .then((response) => {return response.data;});\n}\n\n// eslint-disable-next-line\nexport default {\n    getAllRestaurant,\n    getAllRestaurantName,\n    getRestaurantContent,\n    updateRestaurant\n};","import React, { useState, useEffect } from \"react\";\nimport RestaurantModal from './RestaurantModal'\nimport DataService from \"../services/data.service\"\n\nconst Home = () => {\n    const [modalShow, setModalShow] = useState(false);\n    const [restaurantModal, setRestaurantModal] = useState(false)\n    const [restaurantInfos, setRestaurantInfos] = useState(null)\n    const [data, setData] = useState(null)\n\n    const openModal = (value) =>{\n        setData(restaurantInfos[value])\n        setRestaurantModal(true)\n        setModalShow(true)\n    }\n    \n    useEffect(() => {\n        DataService.getAllRestaurant().then(\n            (response) => {\n                setRestaurantInfos(response.data)\n        })\n    },[]);\n\n\n    return (\n        <section>\n        <div className=\"body-main\">\n            <div className=\"body-main-container\">\n            <div><button className=\"body-container-button\" onClick={() => openModal(0)}>Bouton</button></div>\n            <div><button className=\"body-container-button\" onClick={() => openModal(1)}>Bouton</button></div>\n            </div>\n        </div>\n\n        {restaurantModal && \n            <RestaurantModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                data={data}\n            />\n        }\n        \n        </section>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect, useRef } from \"react\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Form from \"react-validation/build/form\";\nimport { Upload } from 'antd';\nimport DataService from \"../services/data.service\"\nimport Toast from 'light-toast';\n\nconst IMG_URL = \"http://localhost:8080/image?name=\"\n\nconst { Dragger } = Upload;\n\nconst required = (value) => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n\nconst BoardAdmin = () => {\n    const [restaurantsNamesData, setRestaurantsNamesData] = useState(\"\")\n    const [restaurantContent, setRestaurantContent] = useState(\"\")\n    const [loading, setLoading] = useState(false);\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const props = {\n        name: 'photo',\n        multiple: false,\n        action: 'http://localhost:8080/photo',\n        onChange(info) {\n            const { status } = info.file;\n\n            if (status === 'done') {\n                Toast.success(`${info.file.name} file uploaded successfully.`, 2000);\n                setRestaurantContent({\n                    ...restaurantContent,\n                    mainPicture : info.file.name\n                }) \n            } else if (status === 'error') {\n                Toast.fail(`${info.file.name} file upload failed.`, 2000);\n            }\n        },\n    };\n\n    const getRestaurantContent = (name) =>{\n        DataService.getRestaurantContent(name).then(\n            (response) => {\n                setRestaurantContent(response.data)\n            }\n        )\n    }\n\n    const onChangeName = (e) => {\n        const name = e.target.value;\n        setRestaurantContent({\n            ...restaurantContent,\n            name: name\n        })\n      };\n\n    const onChangeType = (e) => {\n        const type = e.target.value;\n        setRestaurantContent({\n            ...restaurantContent,\n            type: type\n        })\n    };\n\n    const onChangeAdress = (e) => {\n        const adress = e.target.value;\n        setRestaurantContent({\n            ...restaurantContent,\n            adress: adress\n        })\n    };\n\n    const onChangeTown = (e) => {\n        const town = e.target.value;\n        setRestaurantContent({\n            ...restaurantContent,\n            town: town\n        })\n    };\n\n    const onChangePrice = (e) => {\n        const price = e.target.value;\n        setRestaurantContent({\n            ...restaurantContent,\n            price: price\n        })\n    };\n\n    const handleModify = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            Toast.loading(\"Loading...\");\n            DataService.updateRestaurant(restaurantContent).then(\n                () => {\n                    DataService.getAllRestaurantName().then(\n                        (response) => {\n                            setRestaurantsNamesData(response.data)\n                    })\n                    setLoading(false);\n                    Toast.hide();\n                    Toast.success(\"Success !\", 2000);\n                  },\n                  (error) => {\n                        console.log(error.response)\n                        setLoading(false);\n                  }\n            )\n        }else{\n            Toast.hide();\n            setLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        DataService.getAllRestaurantName().then(\n            (response) => {\n                setRestaurantsNamesData(response.data)\n        })\n    },[]);\n    \n\n    return (\n            <div className=\"board-admin-container\">\n                <div className=\"board-admin-restaurant-list\">\n                    <div className=\"board-admin-restaurant-title\">\n                        <h3>Restaurants</h3>\n                    </div>\n                    <div>\n                        {restaurantsNamesData &&\n                            restaurantsNamesData.map(function(item){\n                            return (\n                                    <div className=\"board-admin-restaurant-list-content\" key={item.name}>\n                                        <p onClick={() => getRestaurantContent(item.name)}>{item.name}</p>\n                                    </div>          \n                                    )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"board-admin-restaurant-content\">\n                    {restaurantContent &&\n                        <>\n                            <div className=\"board-admin-restaurant-content-modify\">\n                            <Form className=\"modal-form\" ref={form} onSubmit={handleModify}>\n                                <Dragger {...props}>\n                                    <div style={{width: '80%', height: '100px', margin:'auto', backgroundColor:'lightgray'}}>\n                                        <p className=\"ant-upload-text\" style={{textAlign: 'center'}}>Click or drag image to this area to upload</p>\n                                    </div>\n                                </Dragger>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Name</label>\n                                    <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"name\"\n                                    value={restaurantContent.name}\n                                    onChange={onChangeName}\n                                    validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"type\">Type</label>\n                                    <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"type\"\n                                    value={restaurantContent.type}\n                                    onChange={onChangeType}\n                                    validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"adress\">Adress</label>\n                                    <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"adress\"\n                                    value={restaurantContent.adress}\n                                    onChange={onChangeAdress}\n                                    validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"town\">Town</label>\n                                    <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"town\"\n                                    value={restaurantContent.town}\n                                    onChange={onChangeTown}\n                                    validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price\">Price</label>\n                                    <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"price\"\n                                    value={restaurantContent.price}\n                                    onChange={onChangePrice}\n                                    validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                                    {loading && (\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\n                                    )}\n                                    <span>Confirm changes</span>\n                                    </button>\n                                </div>\n                                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                            </Form>\n                        </div>\n                            <div className=\"board-admin-restaurant-content-preview\">\n                                <div className=\"modal-restaurant-img\">\n                                    <img src={IMG_URL + restaurantContent.mainPicture} alt={restaurantContent.name}/>\n                                </div>\n                                <div className=\"board-admin-restaurant-wrapper-preview\">\n                                    <div className=\"modal-restaurant-name-category\">\n                                        <h4>{restaurantContent.name}</h4>\n                                        <p>{restaurantContent.type}</p>\n                                    </div>\n                                    <div className=\"modal-restaurant-adress-town\">\n                                        <p>{restaurantContent.adress}</p>\n                                        <p>{restaurantContent.town}.</p>\n                                    </div>\n                                    <div className=\"modal-restaurant-details\">\n                                        {\n                                            restaurantContent.details.split(',').map(function(item){\n                                            return (\n                                                    <div className=\"modal-restaurant-details-icons\" key={item}>\n                                                        <div className=\"modal-restaurant-details-icons-wrapper\" id={item === \"France\" ? \"country\" : null } >\n                                                        <img src={`${IMG_URL + item.split(' ').join('_').toLowerCase()}.svg`} alt={item}/>\n                                                        </div>\n                                                        <p>{item}</p>\n                                                    </div>          \n                                                    )\n                                            })\n                                        }\n                                        <div className=\"modal-restaurant-details-icons\">\n                                            <div className=\"modal-restaurant-details-icons-wrapper\">\n                                                <img src={restaurantContent.price <= 15 ? IMG_URL + \"smallprice.svg\" : IMG_URL + \"midprice.svg\"} alt={restaurantContent.price}/>\n                                            </div>\n                                            {restaurantContent.price <= 15 ? <p>Moins de 15€</p> : <p>Entre 30€ et 50€</p>}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                         </>   \n                    }\n                </div>\n            </div>\n    )\n}\n\nexport default BoardAdmin;","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\nimport LoginModal from \"./components/LoginModal\";\nimport RegisterModal from \"./components/RegisterModal\";\nimport Home from \"./components/Home\";\nimport BoardAdmin from \"./components/BoardAdmin\";\n\nconst App = () => {\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [loginModalShow, setLoginModalShow] = useState(false);\n  const [signInModalShow, setSignInModalShow] = useState(false);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {showAdminBoard && (\n            <li className=\"nav-item\">\n              <Link to={\"/admin\"} className=\"nav-link\">\n                Admin Board\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a href=\"/home\" className=\"nav-link\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <p className=\"nav-link\" onClick={() => setLoginModalShow(true)}>Log In</p>\n            </li>\n\n            <li className=\"nav-item\">\n              <p className=\"nav-link\" onClick={() => setSignInModalShow(true)}>Sign Up</p>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <>\n        <Switch>\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\n          <Route path=\"/admin\" component={BoardAdmin} />\n        </Switch>\n      </>\n      <LoginModal\n        show={loginModalShow}\n        onHide={() => setLoginModalShow(false)}\n      />\n       <RegisterModal\n        show={signInModalShow}\n        onHide={() => setSignInModalShow(false)}\n      />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
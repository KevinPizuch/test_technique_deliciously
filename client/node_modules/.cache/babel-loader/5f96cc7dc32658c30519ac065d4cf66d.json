{"ast":null,"code":"var _jsxFileName = \"/home/ryzz/test_technique_deliciously/client/src/components/RegisterModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst Register = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setMessage(resMessage);\n        setSuccessful(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleRegister,\n        ref: form,\n        children: [!successful && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"username\",\n              value: username,\n              onChange: onChangeUsername,\n              validations: [required, vusername]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: password,\n              onChange: onChangePassword,\n              validations: [required, vpassword]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}; //   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n//         <Form onSubmit={handleRegister} ref={form}>\n//           {!successful && (\n//             <div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"username\">Username</label>\n//                 <Input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"username\"\n//                   value={username}\n//                   onChange={onChangeUsername}\n//                   validations={[required, vusername]}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"password\">Password</label>\n//                 <Input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   name=\"password\"\n//                   value={password}\n//                   onChange={onChangePassword}\n//                   validations={[required, vpassword]}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <button className=\"btn btn-primary btn-block\">Sign Up</button>\n//               </div>\n//             </div>\n//           )}\n//           {message && (\n//             <div className=\"form-group\">\n//               <div\n//                 className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n//                 role=\"alert\"\n//               >\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Register;\n\n\n_s(Register, \"FdvKddMmZrhNKji/oS0XvsK1Yu0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/ryzz/test_technique_deliciously/client/src/components/RegisterModal.js"],"names":["React","useState","useRef","Form","Input","CheckButton","Modal","Button","AuthService","required","value","vusername","length","vpassword","Register","form","checkBtn","username","setUsername","password","setPassword","successful","setSuccessful","message","setMessage","onChangeUsername","e","target","onChangePassword","handleRegister","preventDefault","current","validateAll","context","_errors","register","then","response","data","error","resMessage","toString","props","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Body>\n      <Form onSubmit={handleRegister} ref={form}>\n           {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n\n//         <Form onSubmit={handleRegister} ref={form}>\n//           {!successful && (\n//             <div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"username\">Username</label>\n//                 <Input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"username\"\n//                   value={username}\n//                   onChange={onChangeUsername}\n//                   validations={[required, vusername]}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"password\">Password</label>\n//                 <Input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   name=\"password\"\n//                   value={password}\n//                   onChange={onChangePassword}\n//                   validations={[required, vpassword]}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <button className=\"btn btn-primary btn-block\">Sign Up</button>\n//               </div>\n//             </div>\n//           )}\n\n//           {message && (\n//             <div className=\"form-group\">\n//               <div\n//                 className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n//                 role=\"alert\"\n//               >\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\nexport default Register;"]},"metadata":{},"sourceType":"module"}
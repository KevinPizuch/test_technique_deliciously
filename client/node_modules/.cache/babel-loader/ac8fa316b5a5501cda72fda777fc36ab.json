{"ast":null,"code":"var _jsxFileName = \"/home/ryzz/test_technique_deliciously/client/src/components/Login.js\";\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n}; // const Login = (props) => {\n//   const form = useRef();\n//   const checkBtn = useRef();\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n//   const onChangeUsername = (e) => {\n//     const username = e.target.value;\n//     setUsername(username);\n//   };\n//   const onChangePassword = (e) => {\n//     const password = e.target.value;\n//     setPassword(password);\n//   };\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n//     setMessage(\"\");\n//     setLoading(true);\n//     form.current.validateAll();\n//     if (checkBtn.current.context._errors.length === 0) {\n//       AuthService.login(username, password).then(\n//         () => {\n//           props.history.push(\"/home\");\n//           window.location.reload();\n//         },\n//         (error) => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n//           setLoading(false);\n//           setMessage(resMessage);\n//         }\n//       );\n//     } else {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n//         <Form onSubmit={handleLogin} ref={form}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name=\"username\"\n//               value={username}\n//               onChange={onChangeUsername}\n//               validations={[required]}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name=\"password\"\n//               value={password}\n//               onChange={onChangePassword}\n//               validations={[required]}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <button className=\"btn btn-primary btn-block\" disabled={loading}>\n//               {loading && (\n//                 <span className=\"spinner-border spinner-border-sm\"></span>\n//               )}\n//               <span>Login</span>\n//             </button>\n//           </div>\n//           {message && (\n//             <div className=\"form-group\">\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n\nfunction Login(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Centered Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ryzz/test_technique_deliciously/client/src/components/Login.js"],"names":["React","useState","useRef","Form","Input","CheckButton","Modal","Button","AuthService","required","value","Login","props","onHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAI,CAACA,KAAL,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CARD,C,CAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBACE,QAAC,KAAD,OACMA,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAAA,4BAME,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,KAAK,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KA1BQF,K;AA4BT,eAAeA,KAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const Login = (props) => {\n//   const form = useRef();\n//   const checkBtn = useRef();\n\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n\n//   const onChangeUsername = (e) => {\n//     const username = e.target.value;\n//     setUsername(username);\n//   };\n\n//   const onChangePassword = (e) => {\n//     const password = e.target.value;\n//     setPassword(password);\n//   };\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     setMessage(\"\");\n//     setLoading(true);\n\n//     form.current.validateAll();\n\n//     if (checkBtn.current.context._errors.length === 0) {\n//       AuthService.login(username, password).then(\n//         () => {\n//           props.history.push(\"/home\");\n//           window.location.reload();\n//         },\n//         (error) => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n\n//           setLoading(false);\n//           setMessage(resMessage);\n//         }\n//       );\n//     } else {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n\n//         <Form onSubmit={handleLogin} ref={form}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name=\"username\"\n//               value={username}\n//               onChange={onChangeUsername}\n//               validations={[required]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name=\"password\"\n//               value={password}\n//               onChange={onChangePassword}\n//               validations={[required]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <button className=\"btn btn-primary btn-block\" disabled={loading}>\n//               {loading && (\n//                 <span className=\"spinner-border spinner-border-sm\"></span>\n//               )}\n//               <span>Login</span>\n//             </button>\n//           </div>\n\n//           {message && (\n//             <div className=\"form-group\">\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\nfunction Login(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Modal heading\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Centered Modal</h4>\n        <p>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
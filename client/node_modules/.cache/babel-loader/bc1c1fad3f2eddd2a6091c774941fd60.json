{"ast":null,"code":"var _jsxFileName = \"/home/ryzz/test_technique_deliciously/client/src/components/RegisterModal.js\";\n// import React, { useState, useRef } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'; // import AuthService from \"../services/auth.service\";\n// const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n// const vusername = (value) => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n// const vpassword = (value) => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n// const Register = (props) => {\n//   const form = useRef();\n//   const checkBtn = useRef();\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [successful, setSuccessful] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n//   const onChangeUsername = (e) => {\n//     const username = e.target.value;\n//     setUsername(username);\n//   };\n//   const onChangePassword = (e) => {\n//     const password = e.target.value;\n//     setPassword(password);\n//   };\n//   const handleRegister = (e) => {\n//     e.preventDefault();\n//     setMessage(\"\");\n//     setSuccessful(false);\n//     form.current.validateAll();\n//     if (checkBtn.current.context._errors.length === 0) {\n//       AuthService.register(username, password).then(\n//         (response) => {\n//           setMessage(response.data.message);\n//           setSuccessful(true);\n//         },\n//         (error) => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n//           setMessage(resMessage);\n//           setSuccessful(false);\n//         }\n//       );\n//     }\n//   };\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n//         <Form onSubmit={handleRegister} ref={form}>\n//           {!successful && (\n//             <div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"username\">Username</label>\n//                 <Input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"username\"\n//                   value={username}\n//                   onChange={onChangeUsername}\n//                   validations={[required, vusername]}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"password\">Password</label>\n//                 <Input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   name=\"password\"\n//                   value={password}\n//                   onChange={onChangePassword}\n//                   validations={[required, vpassword]}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <button className=\"btn btn-primary btn-block\">Sign Up</button>\n//               </div>\n//             </div>\n//           )}\n//           {message && (\n//             <div className=\"form-group\">\n//               <div\n//                 className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n//                 role=\"alert\"\n//               >\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Register;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Centered Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/ryzz/test_technique_deliciously/client/src/components/RegisterModal.js"],"names":["Modal","Button","Register","props","onHide"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,KAAD,OACMA,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAAA,4BAME,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,KAAK,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KA1BQF,Q;AA4BT,eAAeA,QAAf","sourcesContent":["// import React, { useState, useRef } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n// import AuthService from \"../services/auth.service\";\n\n// const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\n\n// const vusername = (value) => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = (value) => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const Register = (props) => {\n//   const form = useRef();\n//   const checkBtn = useRef();\n\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [successful, setSuccessful] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n\n//   const onChangeUsername = (e) => {\n//     const username = e.target.value;\n//     setUsername(username);\n//   };\n\n//   const onChangePassword = (e) => {\n//     const password = e.target.value;\n//     setPassword(password);\n//   };\n\n//   const handleRegister = (e) => {\n//     e.preventDefault();\n\n//     setMessage(\"\");\n//     setSuccessful(false);\n\n//     form.current.validateAll();\n\n//     if (checkBtn.current.context._errors.length === 0) {\n//       AuthService.register(username, password).then(\n//         (response) => {\n//           setMessage(response.data.message);\n//           setSuccessful(true);\n//         },\n//         (error) => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n\n//           setMessage(resMessage);\n//           setSuccessful(false);\n//         }\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n\n//         <Form onSubmit={handleRegister} ref={form}>\n//           {!successful && (\n//             <div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"username\">Username</label>\n//                 <Input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"username\"\n//                   value={username}\n//                   onChange={onChangeUsername}\n//                   validations={[required, vusername]}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"password\">Password</label>\n//                 <Input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   name=\"password\"\n//                   value={password}\n//                   onChange={onChangePassword}\n//                   validations={[required, vpassword]}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <button className=\"btn btn-primary btn-block\">Sign Up</button>\n//               </div>\n//             </div>\n//           )}\n\n//           {message && (\n//             <div className=\"form-group\">\n//               <div\n//                 className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n//                 role=\"alert\"\n//               >\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\nfunction Register(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Modal heading\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Centered Modal</h4>\n        <p>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ryzz/test_technique_deliciously/client/src/components/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n}; // const Login = (props) => {\n//   const form = useRef();\n//   const checkBtn = useRef();\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n//   const onChangeUsername = (e) => {\n//     const username = e.target.value;\n//     setUsername(username);\n//   };\n//   const onChangePassword = (e) => {\n//     const password = e.target.value;\n//     setPassword(password);\n//   };\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n//     setMessage(\"\");\n//     setLoading(true);\n//     form.current.validateAll();\n//     if (checkBtn.current.context._errors.length === 0) {\n//       AuthService.login(username, password).then(\n//         () => {\n//           props.history.push(\"/home\");\n//           window.location.reload();\n//         },\n//         (error) => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n//           setLoading(false);\n//           setMessage(resMessage);\n//         }\n//       );\n//     } else {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n//         <Form onSubmit={handleLogin} ref={form}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name=\"username\"\n//               value={username}\n//               onChange={onChangeUsername}\n//               validations={[required]}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name=\"password\"\n//               value={password}\n//               onChange={onChangePassword}\n//               validations={[required]}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <button className=\"btn btn-primary btn-block\" disabled={loading}>\n//               {loading && (\n//                 <span className=\"spinner-border spinner-border-sm\"></span>\n//               )}\n//               <span>Login</span>\n//             </button>\n//           </div>\n//           {message && (\n//             <div className=\"form-group\">\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n\nfunction Login(props) {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(() => {\n        props.history.push(\"/home\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setLoading(false);\n        setMessage(resMessage);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"modal-form\",\n        onSubmit: handleLogin,\n        ref: form,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Username\",\n            name: \"username\",\n            value: username,\n            onChange: onChangeUsername,\n            validations: [required]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: password,\n            onChange: onChangePassword,\n            validations: [required]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            disabled: loading,\n            children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"hUho6peEgLW2/xnXxRqV2aabDB0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ryzz/test_technique_deliciously/client/src/components/LoginModal.js"],"names":["React","useState","useRef","Input","CheckButton","Modal","Button","Form","AuthService","required","value","Login","props","form","checkBtn","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","onChangeUsername","e","target","onChangePassword","handleLogin","preventDefault","current","validateAll","context","_errors","length","login","then","history","push","window","location","reload","error","resMessage","response","data","toString"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const Login = (props) => {\n//   const form = useRef();\n//   const checkBtn = useRef();\n\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n\n//   const onChangeUsername = (e) => {\n//     const username = e.target.value;\n//     setUsername(username);\n//   };\n\n//   const onChangePassword = (e) => {\n//     const password = e.target.value;\n//     setPassword(password);\n//   };\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     setMessage(\"\");\n//     setLoading(true);\n\n//     form.current.validateAll();\n\n//     if (checkBtn.current.context._errors.length === 0) {\n//       AuthService.login(username, password).then(\n//         () => {\n//           props.history.push(\"/home\");\n//           window.location.reload();\n//         },\n//         (error) => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n\n//           setLoading(false);\n//           setMessage(resMessage);\n//         }\n//       );\n//     } else {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"col-md-12\">\n//       <div className=\"card card-container\">\n//         <img\n//           src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//           alt=\"profile-img\"\n//           className=\"profile-img-card\"\n//         />\n\n//         <Form onSubmit={handleLogin} ref={form}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Input\n//               type=\"text\"\n//               className=\"form-control\"\n//               name=\"username\"\n//               value={username}\n//               onChange={onChangeUsername}\n//               validations={[required]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Input\n//               type=\"password\"\n//               className=\"form-control\"\n//               name=\"password\"\n//               value={password}\n//               onChange={onChangePassword}\n//               validations={[required]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <button className=\"btn btn-primary btn-block\" disabled={loading}>\n//               {loading && (\n//                 <span className=\"spinner-border spinner-border-sm\"></span>\n//               )}\n//               <span>Login</span>\n//             </button>\n//           </div>\n\n//           {message && (\n//             <div className=\"form-group\">\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\nfunction Login(props) {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          props.history.push(\"/home\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Body>\n      <Form className=\"modal-form\" onSubmit={handleLogin} ref={form}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control \n            placeholder=\"Username\"\n            name=\"username\"\n            value={username}\n            onChange={onChangeUsername}\n            validations={[required]}  \n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            name=\"password\"\n            value={password}\n            onChange={onChangePassword}\n            validations={[required]}\n          />\n        </Form.Group>\n        \n        <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n      </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}